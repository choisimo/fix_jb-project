# 임시 토큰/임시 상태/임시 반환 PRD

## 1. 목적 및 개요
- 소셜 로그인 등에서 임시 토큰(tempToken) 발급 및 임시 상태(DRAFT 등) 관리
- 임시 반환/임시 객체 등 임시 처리 로직

## 2. 상세 요구사항
- 임시 토큰 발급/검증/만료 처리
- 임시 상태(DRAFT 등) 관리 및 실제 상태 전환 로직 구현
- 임시 반환/임시 객체(mock 등) 제거 및 실제 구현으로 대체

## 3. 동작 플로우
1. 소셜 로그인 시 임시 토큰 발급
2. 추가 정보 입력/검증 후 실제 토큰 발급
3. 임시 상태(임시저장 등)에서 실제 상태로 전환

## 4. 예외/에러 처리
- 임시 토큰 만료, 잘못된 임시 상태 등

## 5. 구현 상태 및 미구현/임시 구현 현황
### ✅ 구현 완료
- AuthResponse에 tempToken 필드 정의
- 기본적인 임시 토큰 구조 설계
- ReportStatus에 DRAFT 상태 정의

### ❌ 미구현/임시 구현
- **AuthController**: 임시 토큰 검증 로직이 단순 오류 메시지만 반환 ("유효하지 않은 임시 토큰입니다.")
- **JwtTokenProvider**: 임시 토큰 생성/검증 로직 미구현
- **OAuth2AuthenticationSuccessHandler**: 임시 토큰 발급 로직 미완성
- 임시 토큰 만료 시간 관리 시스템 미구현
- 임시 상태에서 실제 상태로의 전환 규칙 미정의
- 임시 토큰 저장소(Redis 등) 연동 미완성
- 소셜 로그인 후 추가 정보 입력 플로우 미구현
- 임시 객체/Mock 사용 부분들의 실제 구현 대체 미완료

## 6. 참고/비고
- 임시 처리 로직은 실제 서비스 오픈 전 반드시 제거/대체 필요
- 보안 측면에서 임시 토큰의 안전한 관리 방안 수립 필요
