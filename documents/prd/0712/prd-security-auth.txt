# 보안 및 인증/인가 PRD

## 1. 목적 및 개요
- Spring Security 기반 인증/인가 시스템
- JWT 토큰 기반 세션 관리
- 역할 기반 접근 제어(RBAC)
- API 보안 및 CORS 설정

## 2. 상세 요구사항
- JWT 토큰 생성/검증/갱신 로직
- 사용자 역할 및 권한 관리
- API 엔드포인트별 접근 제어
- 패스워드 암호화 및 정책
- 세션 관리 및 로그아웃 처리

## 3. 동작 플로우
1. 사용자 로그인 시 JWT 토큰 발급
2. API 요청 시 토큰 검증
3. 사용자 역할에 따른 접근 권한 확인
4. 토큰 만료 시 갱신 또는 재로그인 요구

## 4. 예외/에러 처리
- 토큰 만료, 위조, 권한 없음, 인증 실패 등

## 5. 구현 상태 및 미구현/임시 구현 현황
### ✅ 구현 완료
- Spring Security 기본 설정
- JWT 토큰 기본 구조
- 패스워드 암호화 (BCrypt)
- 기본적인 인증/인가 필터

### ❌ 미구현/임시 구현
- **application.yml**: JWT 시크릿이 하드코딩되어 있음
  - `JWT_SECRET: mySecretKey12345678901234567890123456789012345678901234567890`
- **JwtTokenProvider**: 일부 메서드 완전 구현 필요
  - 토큰 갱신 로직 미완성
  - 토큰 블랙리스트 관리 미구현
- 세밀한 권한 체크 로직 부족
  - 메서드 레벨 보안 설정 미완성
  - 리소스별 접근 권한 세분화 필요
- 보안 헤더 설정 미완성
  - HTTPS 강제 적용 설정 미완료
  - CORS 정책 세부 설정 필요
- 로그인 시도 제한 및 브루트 포스 방어 미구현
- 세션 고정 공격 방어 메커니즘 미완성
- 보안 감사 로그 시스템 미구현

## 6. 참고/비고
- 정기적인 보안 감사 및 취약점 점검 필요
- 개인정보 보호법 준수 필요
- JWT 시크릿 키의 안전한 관리 방안 수립 시급