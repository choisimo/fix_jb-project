✅ 주요 기능 요구사항

1. 데이터베이스 연동 분석

    RDB 스키마 확인: 시스템은 documents 또는 지정된 경로에서 database-structure.md나 DDL(.sql) 파일을 찾아 설계된 데이터베이스 스키마를 인지해야 합니다.

    JPA 구현 검증:

        @Entity 어노테이션이 사용된 엔티티 클래스의 존재 여부를 확인해야 합니다.

        JpaRepository를 상속받는 리포지토리 인터페이스의 존재 여부를 확인해야 합니다.

        서비스 계층(@Service)에서 리포지토리의 저장/조회 메서드(save, findById 등)가 실제로 호출되는지 여부를 검증해야 합니다.

    설정 파일 분석: application.properties 또는 application.yml 파일에서 데이터베이스 연결 정보(URL, username 등)가 정의되어 있는지 확인해야 합니다.

2. 외부 AI 모델 연동 분석

    설정 정보 식별: 코드 내에서 외부 AI 서비스(예: Roboflow)의 API Key, URL 등이 정의된 설정 블록(예: WORKFLOW_CONFIG 딕셔너리)을 식별해야 합니다.

    API 호출 코드 검증: 설정된 정보를 바탕으로 실제 HTTP API 호출(예: requests.post)이 일어나는지 확인해야 합니다.

    동적 호출 구조 분석: 메시지 큐(예: Kafka) 등에서 받은 데이터(예: category)에 따라 동적으로 다른 API를 호출하는 로직이 구현되었는지 분석해야 합니다.

3. 보고서 생성

    결과 요약: 분석 결과를 바탕으로 "DB 연동: 구현 완료", "AI 모델 호출: 미구현" 과 같이 각 기능의 구현 상태를 명확히 요약해야 합니다.

    상세 근거 제시: 각 결론에 대한 근거가 되는 코드 위치나 파일명을 제시해야 합니다. (예: "UserService.java에서 userRepository.save() 호출 확인")

    향후 조치 제안: 미구현되거나 불완전한 부분에 대해 필요한 다음 작업(예: "Entity 클래스 생성 필요")을 제안해야 합니다.

    포맷: 최종 보고서는 가독성이 좋은 Markdown 형식으로 생성되어야 합니다.

📋 구현 완료의 정의 (Definition of Done)

    설계만 된 상태: 관련 문서(스키마 정의 등)는 있으나, 실제 기능 코드는 없는 경우.

    부분 구현: 엔티티나 설정 등 일부 요소는 구현되었으나, 실제 데이터를 처리하는 서비스 로직이나 API 호출부가 없는 경우.

    구현 완료: 설계된 기능과 관련된 모든 코드(모델, 리포지토리, 서비스, API 호출 등)가 유기적으로 연결되어 정상 동작할 것으로 예상되는 상태.
