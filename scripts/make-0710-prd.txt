# 전북 현장 보고 시스템 - 상세 PRD (2024년 7월 10일)

## 1. 개요

"전북 현장 보고 시스템"은 시민들이 전북 지역 내의 다양한 현장 문제(예: 도로 파손, 불법 투기, 시설물 고장 등)를 쉽고 빠르게 신고하고, 관련 기관이 이를 효율적으로 처리하며, 시민들에게 처리 과정을 투명하게 공유하는 것을 목표로 하는 통합 플랫폼입니다.

이 시스템은 모바일 앱(Flutter)과 백엔드 시스템(Spring Boot)으로 구성되며, AI(Roboflow) 기반의 이미지 분석 기능을 통해 신고된 문제의 유형을 자동으로 분류하고, 이를 기반으로 신속한 처리를 지원합니다.

## 2. 주요 기능 및 요구사항

### 2.1. 사용자 기능

#### 2.1.1. 회원가입 및 로그인
-   **요구사항**: 이메일/비밀번호 기반 회원가입 및 로그인, Google/Kakao/Naver 소셜 로그인 지원.
-   **상세**: JWT 기반 인증, 비밀번호 재설정, 계정 활성화/비활성화.
-   **현재 완성도**: ✅ **90% 완료** (세부 권한 정의 및 관리자 기능 강화 필요)

#### 2.1.2. 현장 보고서 작성
-   **요구사항**: 직관적인 UI를 통해 현장 문제 보고서 작성 및 제출.
-   **상세**:
    -   **제목/내용**: 문제 상황을 명확히 설명.
    -   **카테고리**: 문제 유형 선택 (예: 도로, 환경, 시설).
    -   **위치 정보**: GPS 자동 인식 또는 지도에서 수동 선택 (Naver Map 연동).
    -   **사진/동영상 첨부**: 최대 10개 파일 첨부, 촬영 및 갤러리 선택, 파일 압축 (flutter_image_compress).
    -   **전자 서명**: 보고서 제출 시 본인 확인용 서명 (signature 패키지).
    -   **임시 저장**: 작성 중인 보고서 저장 및 불러오기.
-   **현재 완성도**: ✅ **85% 완료** (임시 저장 기능 완성, 파일 업로드 시 용량/개수 제한 및 유효성 검사 강화 필요)

#### 2.1.3. 보고서 조회 및 상태 확인
-   **요구사항**: 자신이 제출한 보고서 목록 조회 및 처리 상태 실시간 확인.
-   **상세**:
    -   **목록**: 최신순, 상태별 필터링, 검색 기능.
    -   **상세**: 보고서 내용, 첨부 파일, 위치, 처리 이력, 담당자 정보 확인.
    -   **댓글**: 보고서에 대한 추가 정보 제공 또는 문의.
-   **현재 완성도**: ✅ **70% 완료** (상태 변경, 처리 이력, 지도 시각화 완성 필요)

#### 2.1.4. 알림 수신 및 관리
-   **요구사항**: 보고서 처리 상태 변경, 댓글 등록 등 주요 이벤트 발생 시 알림 수신.
-   **상세**: 푸시 알림 (FCM), 인앱 알림, 긴급 상황 시 SMS 알림 (Twilio 또는 국내 서비스 연동). 알림 수신 채널 및 유형 설정.
-   **현재 완성도**: 🚧 **60% 진행 중** (SMS 연동, 알림 설정 UI/UX 구현, 알림 이력 관리 필요)

### 2.2. 관리자/담당자 기능

#### 2.2.1. 보고서 접수 및 할당
-   **요구사항**: 제출된 보고서 검토 후 접수 처리 및 담당 부서/직원에게 할당.
-   **상세**:
    -   **AI 분석 결과 활용**: AI가 제안하는 카테고리, 우선순위, 담당 부서 정보 검토 및 확정.
    -   **수동 할당**: 필요한 경우 수동으로 담당자 지정.
-   **현재 완성도**: ✅ **70% 완료** (보고서 조회 및 관리 기능에 포함)

#### 2.2.2. 보고서 처리 및 상태 변경
-   **요구사항**: 할당된 보고서 처리 진행 상황 업데이트 및 상태 변경.
-   **상세**:
    -   **상태 변경**: 접수, 처리 중, 처리 완료, 반려 등.
    -   **처리 내용 기록**: 처리 과정 및 결과 상세 기록.
    -   **피드백**: 반려 시 사유 및 추가 정보 요청.
-   **현재 완성도**: ✅ **70% 완료** (보고서 조회 및 관리 기능에 포함)

#### 2.2.3. 보고서 조회 및 통계
-   **요구사항**: 전체 보고서 조회, 통계 분석 및 대시보드 제공.
-   **상세**:
    -   **필터링/검색**: 기간, 카테고리, 상태, 담당자별 조회.
    -   **지도 시각화**: 지도에 보고서 위치 표시, 클러스터링, 히트맵.
    -   **통계**: 월별/분기별 보고서 수, 처리 시간, 유형별 분포 등.
-   **현재 완성도**: ✅ **70% 완료** (보고서 조회 및 관리 기능에 포함)

#### 2.2.4. 시스템 설정 관리
-   **요구사항**: 시스템 운영에 필요한 기본 설정 및 마스터 데이터 관리.
-   **상세**: 카테고리/상태 추가/수정/삭제, 사용자 역할/권한 관리, 공지사항 관리.
-   **현재 완성도**: 🚧 **50% 진행 중** (모든 관리 기능 구현 및 관리자 페이지 완성, 시스템 로그 및 모니터링 기능 필요)

### 2.3. AI 기반 핵심 기능

#### 2.3.1. 이미지/동영상 분석
-   **요구사항**: 제출된 이미지/동영상에서 현장 문제 자동 감지 및 분류.
-   **상세**:
    -   **Roboflow 연동**: 객체 감지 모델 활용 (포트홀, 불법 투기, 시설물 파손 등 8가지 유형 + 8가지 추가 유형).
    -   **신뢰도 기반 분류**: 감지된 객체의 신뢰도를 바탕으로 카테고리 및 우선순위 자동 제안.
    -   **복합 문제 감지**: 하나의 보고서에 여러 문제 유형이 혼재된 경우 감지 및 처리 로직.
-   **현재 완성도**: ✅ **80% 완료** (정확도 향상, 복합 문제 라우팅 구현 필요)

#### 2.3.2. 자동 라우팅 및 추천
-   **요구사항**: AI 분석 결과를 바탕으로 최적의 담당 부서 또는 직원 자동 추천.
-   **상세**: GIS 데이터 연동 (향후), 문제 유형별 담당 부서 매핑.
-   **현재 완성도**: ✅ **80% 완료** (AI 기반 분석 및 분류 기능에 포함)

## 3. 비기능 요구사항

### 3.1. 성능
-   **응답 시간**: 주요 API 응답 시간 2초 이내.
-   **동시 사용자**: 1,000명 동시 접속 지원.
-   **이미지 분석**: 10MB 이미지 5초 이내 분석 완료.

### 3.2. 보안
-   **인증/인가**: JWT 기반 강력한 인증 및 역할 기반 인가.
-   **데이터 암호화**: 민감 정보 (비밀번호, 개인 식별 정보) 암호화 저장.
-   **파일 보안**: 업로드된 파일에 대한 접근 제어 및 바이러스 검사.

### 3.3. 확장성
-   **모듈화된 아키텍처**: 마이크로서비스 기반으로 기능별 확장 용이.
-   **클라우드 환경 배포**: Docker, Kubernetes 활용.
-   **AI 모델 업데이트**: 새로운 AI 모델 또는 버전으로의 쉬운 교체.

### 3.4. 사용성
-   **직관적인 UI/UX**: 모든 연령대의 사용자가 쉽게 이용 가능.
-   **모바일 최적화**: Android/iOS 네이티브 앱으로 최적의 사용자 경험 제공.

## 4. 기술 스택

-   **Frontend**: Flutter (Dart)
-   **Backend**: Spring Boot (Java)
-   **Database**: PostgreSQL (주 데이터베이스), Redis (캐싱/세션), MongoDB (로그/비정형 데이터 - 향후 확장)
-   **AI/ML**: Roboflow (객체 감지), Qwen2.5 VL (멀티모달 분석 - 향후 확장)
-   **Messaging**: Kafka (이벤트 스트리밍), Firebase Cloud Messaging (FCM)
-   **Deployment**: Docker, Kubernetes (향후)

## 5. 현재 프로젝트 상태 요약 (재확인)

-   **사용자 인증 및 관리**: 90% 완료
-   **현장 보고서 작성 및 제출**: 85% 완료
-   **AI 기반 분석 및 분류**: 80% 완료
-   **보고서 조회 및 관리**: 70% 완료
-   **알림 서비스**: 60% 진행 중
-   **시스템 설정 및 관리**: 50% 진행 중

## 6. 향후 계획 및 로드맵

### 6.1. 단기 목표 (1개월 이내 - 2024년 7월 10일 ~ 2024년 8월 9일)
-   모든 핵심 기능 (보고서 작성/제출, AI 분석, 조회/관리, 알림)의 MVP (Minimum Viable Product) 완성.
-   **AI 기반 분석 및 분류 고도화**: AI 모델 재학습 및 복합 문제 라우팅 로직 구현, AI 분석 결과 상세화.
-   **보고서 조회 및 관리 기능 강화**: 관리자/담당자용 보고서 할당 및 처리 이력 상세화, 지도 시각화 기능 완성.
-   **알림 서비스 완성**: SMS 알림 연동 및 알림 설정 UI/UX 구현, 알림 이력 관리.
-   데이터베이스 최적화 및 인덱싱.
-   로깅 및 모니터링 시스템 구축.
-   통합 테스트 및 버그 수정.
-   배포 자동화 스크립트 개발.

### 6.2. 중기 목표 (3개월 이내)
-   AI 분석 정확도 향상 및 모델 재학습 파이프라인 구축.
-   관리자 페이지 기능 완성 및 운영 효율화.
-   성능 최적화 및 부하 테스트.
-   보안 강화 (취약점 분석 및 개선).

### 6.3. 장기 목표 (6개월 이상)
-   Qwen2.5 VL 등 고급 AI 모델 연동을 통한 분석 기능 고도화.
-   GIS 기반의 정교한 부서 라우팅 및 공간 분석 기능.
-   데이터 시각화 대시보드 및 통계 리포트 기능 강화.
-   시민 참여 및 피드백 시스템 확장.
-   모바일 오프라인 기능 지원.

## 7. 결론

"전북 현장 보고 시스템" 프로젝트는 현재 순조롭게 진행 중이며, 핵심 기능 대부분이 높은 완성도를 보이고 있습니다. 이 상세 PRD를 바탕으로 각 팀은 긴밀히 협력하여, 전북 지역의 현장 문제 해결에 기여하는 안정적이고 효율적인 시스템을 성공적으로 구축할 것입니다.

---

**작성일**: 2024년 7월 10일
**버전**: 1.0