# 📱 회원가입 기능 및 OAuth 로그인 완전 구현 PRD

## 🎯 프로젝트 개요
**목표**: 프론트엔드 회원가입 페이지 구현 및 실제 OAuth 로그인 기능 구현
**현재 상태**: 백엔드 완성, 프론트엔드 주요 기능 누락
**완성도**: 백엔드 95% | 프론트엔드 30%

## 🚨 발견된 주요 문제점

### Critical Issues (즉시 수정 필요)
1. **회원가입 페이지 없음** - 사용자가 회원가입할 수 없음
2. **API URL 불일치** - 프론트(`/users/*`) vs 백엔드(`/api/auth/*`)
3. **OAuth SDK 누락** - Google/Kakao 실제 연동 없음

### Medium Issues (개선 필요)
1. **에러 처리 미흡** - 사용자 친화적 에러 메시지 부족
2. **유효성 검증 불일치** - 프론트/백엔드 검증 규칙 차이
3. **UI/UX 일관성** - 로그인/회원가입 페이지 스타일 통일 필요

## 📋 세부 작업 계획

### Phase 1: 긴급 수정 사항 (우선순위 HIGH)

#### Task 1.1: API URL 통일 및 수정
- **목표**: 프론트엔드 API 호출 경로를 백엔드와 일치시키기
- **현재**: `/users/register` → **변경**: `/api/auth/register`
- **파일**: `flutter-app/lib/core/network/api_client.dart`
- **소요시간**: 30분

#### Task 1.2: 회원가입 페이지 구현
- **목표**: 완전한 회원가입 UI/UX 구현
- **기능**: 이메일, 비밀번호, 이름, 전화번호, 부서 입력
- **파일**: `flutter-app/lib/features/auth/presentation/pages/register_page.dart`
- **소요시간**: 4시간

#### Task 1.3: AuthService 회원가입 기능 추가
- **목표**: 회원가입 API 호출 및 에러 처리
- **파일**: `flutter-app/lib/core/auth/auth_service.dart`
- **소요시간**: 2시간

#### Task 1.4: 라우팅 설정 추가
- **목표**: 회원가입 페이지 라우팅 설정
- **파일**: `flutter-app/lib/app/routes/app_routes.dart`
- **소요시간**: 30분

### Phase 2: OAuth 실제 구현 (우선순위 HIGH)

#### Task 2.1: Google OAuth 패키지 추가
- **목표**: `google_sign_in` 패키지 설치 및 설정
- **파일**: `pubspec.yaml`, Android/iOS 설정
- **소요시간**: 2시간

#### Task 2.2: Kakao OAuth 패키지 추가
- **목표**: `kakao_flutter_sdk` 패키지 설치 및 설정
- **파일**: `pubspec.yaml`, 네이티브 설정
- **소요시간**: 2시간

#### Task 2.3: OAuth Service 실제 구현
- **목표**: 테스트 모드를 실제 OAuth SDK 호출로 변경
- **파일**: `flutter-app/lib/core/auth/auth_service.dart`
- **소요시간**: 3시간

#### Task 2.4: OAuth 콜백 처리
- **목표**: 백엔드 OAuth 엔드포인트와 연동
- **파일**: OAuth 관련 모든 파일
- **소요시간**: 2시간

### Phase 3: 사용자 경험 개선 (우선순위 MEDIUM)

#### Task 3.1: 입력 검증 통일
- **목표**: 프론트엔드 검증을 백엔드와 일치시키기
- **내용**: 비밀번호 정규식, 전화번호 형식 등
- **소요시간**: 1시간

#### Task 3.2: 에러 메시지 개선
- **목표**: 사용자 친화적 에러 메시지 표시
- **내용**: HTTP 상태코드별 한글 메시지
- **소요시간**: 1시간

#### Task 3.3: 로딩 상태 개선
- **목표**: OAuth 로그인 중 적절한 로딩 표시
- **내용**: 로딩 스피너, 상태 메시지
- **소요시간**: 1시간

#### Task 3.4: 폼 유효성 검사 강화
- **목표**: 실시간 입력 검증 및 피드백
- **내용**: 이메일 중복 확인, 실시간 검증
- **소요시간**: 2시간

### Phase 4: 테스트 및 최적화 (우선순위 LOW)

#### Task 4.1: 통합 테스트 작성
- **목표**: 회원가입/로그인 플로우 테스트
- **파일**: `test/auth_integration_test.dart`
- **소요시간**: 3시간

#### Task 4.2: OAuth 테스트 환경 구축
- **목표**: 개발환경에서 OAuth 테스트 가능하도록 설정
- **내용**: 테스트 클라이언트 ID 설정
- **소요시간**: 1시간

## 🛠️ 기술 스택 및 의존성

### 새로 추가할 패키지
```yaml
dependencies:
  google_sign_in: ^6.1.5
  kakao_flutter_sdk: ^1.6.0
  
dev_dependencies:
  integration_test: ^1.0.0
```

### OAuth 설정 파일
- **Google**: `android/app/google-services.json`
- **Kakao**: `android/app/src/main/res/values/strings.xml`

## 🎨 UI/UX 디자인 가이드

### 회원가입 페이지 디자인
- **스타일**: 로그인 페이지와 동일한 디자인 언어
- **컬러**: Primary Blue (#2196F3), Error Red (#F44336)
- **폰트**: Roboto, 16px 기본 크기
- **버튼**: 56px 높이, 16px 모서리 둥글게

### 입력 필드 요구사항
1. **이메일**: 이메일 형식 검증, 중복 확인
2. **비밀번호**: 8자 이상, 영문+숫자+특수문자
3. **이름**: 최대 100자
4. **전화번호**: 010-1234-5678 형식
5. **부서**: 선택사항, 최대 100자

## ⏱️ 작업 시간 추정

| Phase | 작업 시간 | 의존성 |
|-------|----------|--------|
| Phase 1 | 7시간 | 없음 |
| Phase 2 | 9시간 | Phase 1 완료 |
| Phase 3 | 5시간 | Phase 1-2 완료 |
| Phase 4 | 4시간 | 모든 Phase 완료 |
| **총합** | **25시간** | - |

## 🧪 테스트 계획

### 1. 단위 테스트
- AuthService 메서드 테스트
- 입력 검증 로직 테스트
- OAuth 서비스 모킹 테스트

### 2. 통합 테스트
- 회원가입 → 로그인 플로우
- OAuth 로그인 플로우
- 에러 시나리오 테스트

### 3. 수동 테스트 체크리스트
- [ ] 이메일 회원가입 정상 동작
- [ ] Google OAuth 로그인 정상 동작
- [ ] Kakao OAuth 로그인 정상 동작
- [ ] 중복 이메일 에러 처리
- [ ] 네트워크 에러 처리
- [ ] 입력 검증 에러 표시

## 🚀 배포 고려사항

### OAuth 프로덕션 설정
1. **Google**: Firebase 프로젝트 설정
2. **Kakao**: Kakao Developers 앱 등록
3. **도메인**: 리다이렉트 URL 설정

### 보안 고려사항
1. **API Key**: 환경변수로 관리
2. **토큰**: Secure Storage 사용
3. **HTTPS**: 프로덕션에서 필수

## 📊 성공 지표

### 기능적 지표
- [ ] 회원가입 성공률 > 95%
- [ ] OAuth 로그인 성공률 > 90%
- [ ] 에러 발생 시 사용자 이해도 > 90%

### 기술적 지표
- [ ] API 응답 시간 < 3초
- [ ] 앱 크래시 없음
- [ ] 메모리 누수 없음

## 🔄 작업 우선순위

### 즉시 시작 가능 (병렬 처리)
1. **Task 1.1**: API URL 수정
2. **Task 1.2**: 회원가입 페이지 구현

### 순차 진행 필요
1. **Task 1.3**: AuthService 구현 (1.2 완료 후)
2. **Task 2.x**: OAuth 구현 (Phase 1 완료 후)

이 PRD를 기반으로 TaskMaster에서 세부 작업을 나누어 진행하겠습니다.