# PRD: 지도 API 변경 (Google Maps → Naver Map)

## 1. 문서 정보

- **문서 버전**: v1.0
- **작성일**: 2025년 6월 29일
- **대상 모듈**: Flutter Application
- **주요 변경 사항**: 지도 표시 및 관련 기능의 API를 Google Maps에서 Naver Map으로 전환

---

## 2. 개요

본 문서는 '전북 현장 보고 및 관리 플랫폼'의 Flutter 앱 내 지도 기능을 기존의 Google Maps에서 **Naver Map으로 교체**하기 위한 요구사항과 구현 계획을 정의합니다.

### 2.1. 변경 목표

대한민국 내에서 더 높은 정확도와 상세한 정보를 제공하는 네이버 지도를 도입하여, 현장 직원의 위치 정확성을 높이고 사용자에게 친숙한 지도 경험을 제공하는 것을 목표로 합니다.

### 2.2. 기대 효과

-   **정확성 향상**: 국내 환경에 최적화된 지도 데이터(건물명, 도로명, 지번 등)를 통해 보고 위치의 정확도 증대
-   **사용자 경험(UX) 개선**: 국내 사용자에게 익숙한 UI/UX 제공으로 직관성 향상
-   **규제 준수**: 국내 지도 데이터 관련 규제에 보다 효과적으로 대응
-   **기능 확장성**: 네이버 지도 플랫폼이 제공하는 다양한 부가 기능(실시간 교통정보, 지적도 등) 활용 기반 마련

---

## 3. 기능 요구사항 (Scope of Work)

### 3.1. 필수 구현 기능

1.  **지도 표시**: 앱 내 모든 지도 화면을 `NaverMap` 위젯으로 교체하여 표시해야 합니다.
2.  **현재 위치 표시**: 사용자의 현재 GPS 위치를 받아와 네이버 지도 위에 정확히 표시해야 합니다. (`Geolocator` 패키지 활용)
3.  **마커 표시**: 보고서의 위치 등 특정 좌표에 대한 마커(핀)를 네이버 지도 위에 표시할 수 있어야 합니다.
4.  **카메라 이동**: 특정 좌표로 지도의 중심을 이동시키고, 적절한 줌 레벨로 조정할 수 있어야 합니다.
5.  **지도 컨트롤러**: 지도 이동, 확대/축소 등 기본적인 지도 조작이 가능해야 합니다.

### 3.2. 사용자 인터페이스 (UI)

-   기존의 '현재 위치로 이동' 버튼 기능이 네이버 지도에서도 동일하게 동작해야 합니다.
-   마커 클릭 시 나타나는 정보창(Info Window) 또는 관련 UI가 네이버 지도와 호환되어야 합니다.

### 3.3. 플랫폼별 요구사항

-   **Android/iOS**: 양 플랫폼에서 네이버 지도가 일관되게 동작해야 합니다.
-   **Web**: 웹 플랫폼에서의 지원 여부를 확인하고, 지원되지 않을 경우 대체 방안(예: 웹에서는 Google Maps 유지 또는 이미지 지도 표시)을 수립해야 합니다. (초기 MVP에서는 모바일 앱에 집중)

---

## 4. 기술 구현 계획

### 4.1. 의존성 변경

-   `pubspec.yaml` 파일에서 `google_maps_flutter` 패키지를 제거합니다.
-   `flutter_naver_map` 패키지를 새로 추가하고, `flutter pub get`을 실행합니다.

```yaml
# pubspec.yaml
dependencies:
  flutter:
    sdk: flutter
  # ... 기존 의존성

  # 지도 관련
  # google_maps_flutter: ^2.2.0 # 제거
  flutter_naver_map: ^1.2.0 # 추가 (최신 버전 확인 필요)
  geolocator: ^10.1.0 # 현재 위치 획득을 위해 유지
```

### 4.2. 네이버 클라우드 플랫폼 설정

1.  **애플리케이션 등록**: 네이버 클라우드 플랫폼에 접속하여 신규 애플리케이션을 등록합니다.
2.  **API 선택**: `Maps` 서비스에서 `Mobile Dynamic Map`을 선택합니다.
3.  **패키지 이름 등록**: Android의 `applicationId`와 iOS의 `Bundle ID`를 정확히 등록합니다.
4.  **API 키 발급**: 발급된 **Client ID**를 확인합니다.

### 4.3. 플랫폼별 네이티브 설정

-   **Android**: `android/app/src/main/AndroidManifest.xml` 파일에 발급받은 Client ID를 메타데이터로 추가해야 합니다.
    ```xml
    <application ...>
        <meta-data
            android:name="com.naver.maps.map.CLIENT_ID"
            android:value="YOUR_NAVER_MAP_CLIENT_ID" />
    </application>
    ```
-   **iOS**: `ios/Runner/Info.plist` 파일에 Client ID와 앱 권한 관련 설정을 추가해야 합니다.
    ```xml
    <key>NMFClientId</key>
    <string>YOUR_NAVER_MAP_CLIENT_ID</string>
    ```

### 4.4. Flutter 코드 리팩토링

-   **초기화**: `main.dart` 또는 앱 시작점에서 `NaverMapSdk.instance.initialize()`를 호출하여 SDK를 초기화합니다.
-   **위젯 교체**: 기존 `GoogleMap` 위젯을 `NaverMap` 위젯으로 교체합니다.

    ```dart
    // 변경 전
    // GoogleMap(
    //   initialCameraPosition: _kGooglePlex,
    //   onMapCreated: (GoogleMapController controller) {
    //     _controller.complete(controller);
    //   },
    // )

    // 변경 후
    NaverMap(
      options: const NaverMapViewOptions(),
      onMapReady: (controller) {
        // 지도 컨트롤러 사용 로직
        print("네이버 맵 로딩 완료!");
      },
    )
    ```

-   **로직 수정**: `CameraPosition`, `Marker` 등 Google Maps 관련 객체를 `NCameraPosition`, `NMarker` 등 `flutter_naver_map` 패키지의 객체로 모두 교체하고 관련 로직을 수정합니다.

---

## 5. 테스트 계획

-   **기능 테스트**:
    -   [ ] 앱 실행 시 지도가 정상적으로 로딩되는지 확인
    -   [ ] 현재 위치 버튼 클릭 시 사용자의 현재 위치로 지도가 이동하는지 확인
    -   [ ] 보고서 상세 페이지에서 해당 보고서의 위치가 마커로 정확히 표시되는지 확인
    -   [ ] 지도 확대/축소 및 이동이 부드럽게 동작하는지 확인
-   **플랫폼 테스트**:
    -   [ ] Android 기기에서 모든 기능이 정상 동작하는지 확인
    -   [ ] iOS 기기에서 모든 기능이 정상 동작하는지 확인
-   **성능 테스트**:
    -   [ ] 지도 로딩 속도 및 앱 성능 저하 여부 확인

---

## 6. 성공 지표 (KPIs)

-   앱 내 모든 지도 기능이 네이버 지도로 100% 전환 완료.
-   위치 표시 오차가 기존 대비 20% 이상 감소.
-   지도 관련 기능에서 발생하는 오류(Crash/ANR)가 0건.

---

## 7. 리스크 및 완화 방안

| 리스크 | 심각도 | 완화 방안 |
| :--- | :--- | :--- |
| `flutter_naver_map` 패키지의 안정성 문제 | 중간 | 커뮤니티 및 공식 문서를 통해 알려진 이슈를 사전에 파악하고, 충분한 테스트를 통해 안정성을 검증한다. |
| 네이버 지도 API의 사용량 제한 및 비용 발생 | 낮음 | 네이버 클라우드 플랫폼의 API 사용량 정책을 숙지하고, 개발 단계에서 과도한 호출이 발생하지 않도록 코드를 최적화한다. |
| 좌표계 변환 문제 (필요시) | 낮음 | 네이버 지도가 사용하는 좌표계와 `Geolocator`가 반환하는 좌표계(WGS84)가 다를 경우, 좌표 변환 로직을 추가한다. (대부분의 최신 SDK는 자동 처리) |
