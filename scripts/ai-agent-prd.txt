# AI 통합 라우팅 시스템 PRD (Product Requirements Document)

## 1. 개요

본 문서는 AI 기반의 통합 라우팅 시스템 개발을 위한 제품 요구사항을 정의합니다. 이 시스템은 입력된 데이터를 AI 에이전트가 파싱하고 분석하여, 가장 적합한 Roboflow 객체 분석 모델로 라우팅하며, 동시에 유효성 검사를 수행하는 것을 목표로 합니다. 모든 과정은 단일 트랜잭션으로 묶여 데이터의 일관성과 신뢰성을 보장합니다.

## 2. 목표

*   다양한 형태의 입력 데이터를 AI 기반으로 정확하게 파싱하고 분석합니다.
*   분석 결과에 따라 최적의 Roboflow 객체 분석 모델을 동적으로 선택하고 라우팅합니다.
*   데이터 처리 및 모델 라우팅 과정에서 발생할 수 있는 오류를 사전에 감지하고 유효성을 검증합니다.
*   전체 프로세스를 단일 트랜잭션으로 묶어 데이터 무결성을 확보합니다.
*   비용 효율적인 AI 모델(OpenRouter.ai의 Qwen2.5-VL-72B-Instruct:free)을 활용하여 시스템을 구축합니다.

## 3. 주요 기능 및 요구사항

### 3.1. 통합 AI 에이전트 (Integrated AI Agent)

*   **입력 데이터 수신:** 다양한 소스(예: 이미지 메타데이터, 텍스트 설명 등)로부터 입력 데이터를 수신합니다.
*   **데이터 파싱 및 분석:**
    *   수신된 입력 데이터를 AI 모델(`https://openrouter.ai/qwen/qwen2.5-vl-72b-instruct:free`)을 활용하여 파싱하고 의미론적으로 분석합니다.
    *   분석 결과는 Roboflow 모델 선택에 필요한 핵심 정보(예: 객체 유형, 손상 유형, 환경 정보 등)를 포함해야 합니다.
*   **Roboflow 모델 라우팅:**
    *   분석된 정보를 기반으로 사전에 정의된 Roboflow 모델 목록 중에서 가장 적합한 객체 분석 모델을 식별합니다.
    *   식별된 모델로 데이터를 라우팅하여 분석을 요청합니다.
    *   모델 라우팅 로직은 확장 가능하도록 설계되어야 합니다 (새로운 Roboflow 모델 추가 시 용이).

### 3.2. 유효성 검증 AI 에이전트 (Validation Checking AI Agent)

*   **입력 데이터 유효성 검증:**
    *   통합 AI 에이전트가 파싱 및 분석한 데이터의 유효성을 AI 모델(`https://openrouter.ai/qwen/qwen2.5-vl-72b-instruct:free`)의 OCR 및 객체 인식 능력을 활용하여 검증합니다.
    *   예상치 못한 값, 형식 오류, 논리적 모순 등을 감지합니다.
*   **Roboflow 모델 라우팅 결정 유효성 검증:**
    *   통합 AI 에이전트가 결정한 Roboflow 모델 라우팅 결정의 적합성을 검증합니다.
    *   예: 특정 입력 데이터에 대해 특정 모델이 항상 선택되어야 하는 규칙 위반 여부 확인.
*   **오류 처리:** 유효성 검증 실패 시, 적절한 오류 메시지를 생성하고 트랜잭션을 롤백할 수 있는 메커니즘을 제공합니다.

### 3.3. 트랜잭션 관리

*   **단일 트랜잭션:** 통합 AI 에이전트의 파싱/분석 및 라우팅 결정, 그리고 유효성 검증 AI 에이전트의 모든 검증 과정은 단일 논리적 트랜잭션으로 묶여야 합니다.
*   **원자성(Atomicity):** 트랜잭션 내의 모든 작업은 성공하거나, 아니면 모두 실패하여 롤백되어야 합니다. 부분적인 성공은 허용되지 않습니다.

## 4. 기술 스택 및 제약사항

*   **AI 모델 API:** `https://openrouter.ai/qwen/qwen2.5-vl-72b-instruct:free` API를 사용하여 AI 에이전트를 구현합니다.
*   **Roboflow 연동:** Roboflow API를 직접 호출하여 객체 분석을 수행합니다.
*   **백엔드 프레임워크:** Spring Boot (Java) 기반으로 구현될 수 있습니다.
*   **데이터베이스:** 기존 `database/schema.sql`을 활용하여 필요한 메타데이터 및 로그를 저장합니다.
*   **로깅:** Kafka를 통한 로깅(`documents/feature-kafka-logging-mongodb.md` 참조)을 지원합니다.

## 5. 사용자 시나리오 (User Stories)

*   **시나리오 1: 정상적인 이미지 분석 요청**
    *   사용자는 손상된 도로 이미지를 시스템에 업로드합니다.
    *   통합 AI 에이전트는 이미지 메타데이터와 사용자 설명을 파싱하여 '도로 파손' 유형임을 분석합니다.
    *   통합 AI 에이전트는 분석 결과에 따라 'pothole-detection' Roboflow 모델로 라우팅을 결정합니다.
    *   유효성 검증 AI 에이전트는 파싱된 데이터와 라우팅 결정이 유효함을 확인합니다.
    *   시스템은 'pothole-detection' 모델을 호출하여 이미지 분석을 수행하고 결과를 반환합니다.
    *   모든 과정은 단일 트랜잭션으로 성공적으로 완료됩니다.

*   **시나리오 2: 유효하지 않은 입력 데이터**
    *   사용자는 불분명하거나 유효하지 않은 형식의 데이터를 시스템에 업로드합니다.
    *   통합 AI 에이전트는 데이터를 파싱하려 시도합니다.
    *   유효성 검증 AI 에이전트는 파싱된 데이터가 유효하지 않음을 감지합니다.
    *   시스템은 트랜잭션을 롤백하고 사용자에게 오류 메시지를 반환합니다.

*   **시나리오 3: 부적절한 모델 라우팅 결정**
    *   통합 AI 에이전트가 특정 입력에 대해 잘못된 Roboflow 모델로 라우팅을 결정합니다.
    *   유효성 검증 AI 에이전트는 이 라우팅 결정이 사전에 정의된 규칙에 위배됨을 감지합니다.
    *   시스템은 트랜잭션을 롤백하고 오류를 기록합니다.

## 6. 성공 지표

*   AI 에이전트의 파싱 및 라우팅 정확도 95% 이상.
*   유효성 검증 AI 에이전트의 오류 감지율 99% 이상.
*   단일 트랜잭션 처리 성공률 99.9% 이상.
*   평균 응답 시간 2초 이내 (Roboflow API 응답 시간 제외).
*   OpenRouter.ai API 호출 비용 효율성 유지.

## 7. 범위 외 (Out of Scope)

*   Roboflow 모델 자체의 학습 및 관리.
*   OpenRouter.ai API의 가용성 및 성능 보장.
*   AI 에이전트의 지속적인 학습 및 재훈련 메커니즘 (초기 버전).
*   복잡한 워크플로우 오케스트레이션 (단일 트랜잭션 범위 내에서만 처리).
