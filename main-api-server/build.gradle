plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.jeonbuk'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Jakarta EE annotations (for @PostConstruct)
    implementation 'jakarta.annotation:jakarta.annotation-api'
    
    // Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2' // 개발용 H2 데이터베이스
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    // PostGIS for spatial data
    implementation 'org.hibernate:hibernate-spatial:6.3.1.Final'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    
    // WebFlux for WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // File Upload
    implementation 'commons-fileupload:commons-fileupload:1.5'
    implementation 'commons-io:commons-io:2.11.0'
    
    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Utilities
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    
    // Mockito for dev profile mocking
    implementation 'org.mockito:mockito-core'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
    mainClass = 'com.jeonbuk.report.JeonbukReportPlatformApplication'
}