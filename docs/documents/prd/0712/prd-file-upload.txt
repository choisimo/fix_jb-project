# 파일 업로드 및 관리 PRD

## 1. 목적 및 개요
- 리포트에 첨부할 이미지/비디오 파일 업로드 기능
- 파일 메타데이터 관리 및 저장소 연동
- 파일 접근 권한 관리 및 보안

## 2. 상세 요구사항
- 멀티파트 파일 업로드 API 구현
- 파일 유효성 검증(크기, 형식, 보안)
- 파일 저장소 연동(로컬/클라우드)
- 파일 메타데이터 DB 저장
- 썸네일 생성 및 관리
- 파일 다운로드/조회 API

## 3. 동작 플로우
1. 클라이언트에서 파일 선택 및 업로드 요청
2. 서버에서 파일 유효성 검증
3. 저장소에 파일 저장 및 메타데이터 DB 저장
4. 리포트와 파일 연관관계 설정
5. 썸네일 생성(이미지의 경우)
6. 업로드 완료 응답

## 4. 예외/에러 처리
- 파일 크기 초과, 지원되지 않는 형식, 저장소 오류, 권한 없음 등

## 5. 구현 상태 및 미구현/임시 구현 현황
### ✅ 구현 완료
- FileService 기본 구조
- ReportFile 엔티티 및 Repository
- 기본적인 파일 업로드 설정 (application.yml)
- 파일 크기 및 형식 제한 설정

### ❌ 미구현/임시 구현
- **FileService**: 썸네일 생성 로직이 placeholder 상태
  - `log.info("Thumbnail generation placeholder for: {}", originalPath);`
- 파일 저장소 연동 로직 미완성
- 파일 접근 권한 체크 메커니즘 미구현
- 파일 중복 처리 및 해시 검증 로직 미완성
- 대용량 파일 업로드 최적화 (청크 업로드 등) 미구현
- 파일 삭제 및 정리 메커니즘 미구현
- 클라우드 저장소 (S3 등) 연동 미완성
- 파일 다운로드 시 권한 검증 로직 미구현

## 6. 참고/비고
- 파일 저장소 용량 관리 정책 필요
- 악성 파일 업로드 방지 대책 필요
- 파일 메타데이터 인덱싱 최적화 필요