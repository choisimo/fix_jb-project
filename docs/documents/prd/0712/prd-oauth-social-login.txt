# OAuth 소셜 로그인(Google/Kakao) PRD

## 1. 목적 및 개요
- Google/Kakao OAuth2를 통한 소셜 로그인 구현
- 사용자 편의성 향상 및 회원가입 프로세스 간소화
- 기존 이메일/비밀번호 로그인과 병행 운영

## 2. 상세 요구사항
- Google OAuth2 클라이언트 설정 및 연동
- Kakao OAuth2 클라이언트 설정 및 연동
- 소셜 로그인 성공 후 사용자 정보 동기화
- 최초 소셜 로그인 시 추가 정보 입력 플로우
- 기존 계정과 소셜 계정 연동 기능

## 3. 동작 플로우
1. 사용자가 소셜 로그인 버튼 클릭
2. OAuth2 인증 서버로 리다이렉트
3. 사용자 동의 후 인증 코드 수신
4. 백엔드에서 토큰 교환 및 사용자 정보 획득
5. 최초 로그인 시 추가 정보 입력 요청
6. 완료 후 실제 JWT 토큰 발급

## 4. 예외/에러 처리
- OAuth2 인증 실패, 토큰 교환 실패, 사용자 정보 획득 실패 등

## 5. 구현 상태 및 미구현/임시 구현 현황
### ✅ 구현 완료
- Spring Security OAuth2 기본 설정
- Google/Kakao provider 설정 구조
- OAuth2AuthenticationSuccessHandler 기본 틀

### ❌ 미구현/임시 구현
- **application.yml**: Google/Kakao 클라이언트 설정에 placeholder 값 사용
  - `GOOGLE_CLIENT_ID: your-google-client-id`
  - `GOOGLE_CLIENT_SECRET: your-google-client-secret`
  - `KAKAO_CLIENT_ID: your-kakao-client-id`
  - `KAKAO_CLIENT_SECRET: your-kakao-client-secret`
- **Flutter 앱**: OAuth 패키지 미설치
  - google_sign_in 패키지 설치 필요
  - kakao_flutter_sdk 패키지 설치 필요
- **AuthService (Flutter)**: 소셜 로그인 메서드 실제 구현 필요
  - `loginWithGoogle()` 메서드 실제 SDK 호출 구현 필요
  - `loginWithKakao()` 메서드 실제 SDK 호출 구현 필요
- OAuth2 토큰 교환 후 사용자 정보 동기화 로직 미완성
- 소셜 로그인 UI/UX 최적화 미완료

## 6. 참고/비고
- 보안 및 개인정보 보호 정책 준수 필요
- 각 플랫폼별 앱 등록 및 키 관리 필요
- Taskmaster에서 OAuth 관련 태스크들이 pending 상태임