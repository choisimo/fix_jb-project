{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "Setup Project Infrastructure and Core Services",
        "description": "Configure Docker Compose for core services: PostgreSQL, Redis, Kafka, Zookeeper. Set up Spring Boot project with necessary dependencies.",
        "details": "Write a `docker-compose.yml` file to define and link services: `postgres` (database), `redis` (cache/session), `zookeeper` (Kafka dependency), `kafka` (message queue). Initialize a Spring Boot project with dependencies for Web, JPA, Security, Kafka, Redis, etc. using Maven or Gradle.",
        "testStrategy": "Verify all services start correctly using `docker-compose up`. Check service logs for errors. Ensure Spring Boot application connects to DB, Redis, and Kafka.",
        "priority": "high",
        "dependencies": [],
        "status": "completed",
        "completedAt": "2025-07-10T00:00:00.000Z",
        "notes": "Docker Compose configured with Kafka, Zookeeper, PostgreSQL. Spring Boot project setup is complete with all necessary dependencies in pom.xml."
      },
      {
        "id": 2,
        "title": "Design and Implement Database Schema using JPA",
        "description": "Design and implement the database schema using JPA entities for users, reports, comments, and related data.",
        "details": "Create JPA entity classes: `User`, `Report`, `ReportFile`, `Comment`, `Category`, `Status`. Define relationships (@OneToMany, @ManyToOne, etc.) and constraints. Use `@Entity` annotations to map classes to database tables. Configure `application.properties` for Hibernate to generate or validate the schema.",
        "testStrategy": "Run the Spring Boot application and verify that all tables and columns are created in the PostgreSQL database as per the entity definitions. Insert sample data to check constraints and relationships.",
        "priority": "high",
        "dependencies": [
          1
        ],
        "status": "completed",
        "completedAt": "2025-07-10T00:00:00.000Z",
        "notes": "JPA entities for User, Report, and related tables are defined. The schema is automatically generated by Hibernate."
      },
      {
        "id": 27,
        "title": "프로덕션 배포 - 핵심 인프라 파일 구현",
        "description": "빌드 오류를 해결하기 위한 누락된 핵심 인프라 파일들을 구현합니다.",
        "details": "앱 테마(app_theme.dart), 앱 초기화(app_initializer.dart), API 상수(api_constants.dart), 토큰 관리자(token_manager.dart), 에러 핸들러(error_handler.dart) 등 빌드에 필요한 핵심 파일들을 구현합니다.",
        "testStrategy": "구현 후 flutter analyze 실행하여 오류 개수 감소 확인. 기본 import 오류 해결 검증.",
        "priority": "critical",
        "dependencies": [],
        "status": "pending",
        "subtasks": [
          {
            "id": "27.1",
            "title": "app_theme.dart 구현",
            "description": "Material 3 기반 라이트/다크 테마 구현",
            "status": "pending"
          },
          {
            "id": "27.2", 
            "title": "app_initializer.dart 구현",
            "description": "앱 시작 시 필요한 초기화 로직 구현",
            "status": "pending"
          },
          {
            "id": "27.3",
            "title": "api_constants.dart 구현", 
            "description": "API 기본 URL 및 엔드포인트 상수 정의",
            "status": "pending"
          },
          {
            "id": "27.4",
            "title": "token_manager.dart 구현",
            "description": "JWT 토큰 관리 및 저장 로직 구현",
            "status": "pending"
          },
          {
            "id": "27.5",
            "title": "error_handler.dart 구현",
            "description": "전역 에러 핸들링 시스템 구현",
            "status": "pending"
          }
        ]
      },
      {
        "id": 28,
        "title": "프로덕션 배포 - 타입 시스템 정의",
        "description": "누락된 핵심 타입들을 정의하여 컴파일 오류를 해결합니다.",
        "details": "AuthState, LoginRequest, ReportType, NotificationSettings, SecurityEvent 등 애플리케이션 전반에서 사용되는 핵심 타입들을 정의합니다.",
        "testStrategy": "타입 정의 후 관련 파일들의 컴파일 오류 해결 확인. Freezed 코드 생성 성공 검증.",
        "priority": "critical",
        "dependencies": [27],
        "status": "pending",
        "subtasks": [
          {
            "id": "28.1",
            "title": "AuthState 타입 정의 수정",
            "description": "인증 상태 관리를 위한 AuthState 타입 정의",
            "status": "pending"
          },
          {
            "id": "28.2",
            "title": "ReportType enum 정의",
            "description": "리포트 카테고리를 위한 ReportType enum 정의",
            "status": "pending"
          },
          {
            "id": "28.3",
            "title": "NotificationSettings 타입 정의",
            "description": "알림 설정을 위한 NotificationSettings 타입 정의",
            "status": "pending"
          },
          {
            "id": "28.4",
            "title": "SecurityEvent 타입 정의",
            "description": "보안 이벤트를 위한 SecurityEvent 타입 정의",
            "status": "pending"
          }
        ]
      },
      {
        "id": 29,
        "title": "프로덕션 배포 - Provider 시스템 구현",
        "description": "Riverpod Provider 패턴을 완전히 구현하여 상태 관리를 안정화합니다.",
        "details": "authRepositoryProvider, tokenServiceProvider, createReportControllerProvider 등 누락된 Provider들을 구현하고 의존성 주입을 완료합니다.",
        "testStrategy": "Provider 정의 후 관련 컨트롤러들의 컴파일 성공 확인. 의존성 주입 정상 동작 검증.",
        "priority": "critical",
        "dependencies": [28],
        "status": "pending",
        "subtasks": [
          {
            "id": "29.1",
            "title": "Core Provider 정의",
            "description": "authRepositoryProvider, tokenServiceProvider 등 핵심 Provider 구현",
            "status": "pending"
          },
          {
            "id": "29.2",
            "title": "Report Provider 정의",
            "description": "createReportControllerProvider, reportListProvider 등 구현",
            "status": "pending"
          },
          {
            "id": "29.3",
            "title": "Notification Provider 정의",
            "description": "notificationServiceProvider, pushNotificationServiceProvider 등 구현",
            "status": "pending"
          },
          {
            "id": "29.4",
            "title": "Security Provider 정의",
            "description": "dataEncryptionServiceProvider, biometricAuthenticationServiceProvider 등 구현",
            "status": "pending"
          }
        ]
      },
      {
        "id": 30,
        "title": "프로덕션 배포 - Import 경로 수정",
        "description": "잘못된 import 경로들을 수정하여 모듈 간 연결을 복구합니다.",
        "details": "상대 경로 오류, 존재하지 않는 파일 참조 등 688개 오류 중 import 관련 오류들을 체계적으로 수정합니다.",
        "testStrategy": "Import 경로 수정 후 flutter analyze로 오류 개수 대폭 감소 확인. IDE에서 import 에러 표시 해결 검증.",
        "priority": "high",
        "dependencies": [29],
        "status": "pending",
        "subtasks": [
          {
            "id": "30.1",
            "title": "Auth 모듈 import 수정",
            "description": "인증 관련 모듈들의 잘못된 import 경로 수정",
            "status": "pending"
          },
          {
            "id": "30.2",
            "title": "Report 모듈 import 수정", 
            "description": "리포트 관련 모듈들의 잘못된 import 경로 수정",
            "status": "pending"
          },
          {
            "id": "30.3",
            "title": "Notification 모듈 import 수정",
            "description": "알림 관련 모듈들의 잘못된 import 경로 수정", 
            "status": "pending"
          },
          {
            "id": "30.4",
            "title": "Security 모듈 import 수정",
            "description": "보안 관련 모듈들의 잘못된 import 경로 수정",
            "status": "pending"
          }
        ]
      },
      {
        "id": 31,
        "title": "프로덕션 배포 - 코드 생성 및 빌드 안정화",
        "description": "Freezed, Riverpod, JSON 직렬화 코드 생성을 완료하고 빌드 시스템을 안정화합니다.",
        "details": "build_runner를 통한 코드 생성을 완료하고, 의존성 버전 충돌을 해결하여 완전한 빌드 성공을 달성합니다.",
        "testStrategy": "flutter packages pub run build_runner build 성공 확인. flutter build apk --debug 성공 확인. 0개 컴파일 오류 달성.",
        "priority": "high", 
        "dependencies": [30],
        "status": "pending",
        "subtasks": [
          {
            "id": "31.1",
            "title": "의존성 버전 충돌 해결",
            "description": "65개 패키지 호환성 문제 해결 및 pubspec.yaml 최적화",
            "status": "pending"
          },
          {
            "id": "31.2",
            "title": "Freezed 코드 생성",
            "description": "모든 data class에 대한 Freezed 코드 생성 완료",
            "status": "pending"
          },
          {
            "id": "31.3",
            "title": "Riverpod 코드 생성",
            "description": "모든 Provider에 대한 Riverpod 코드 생성 완료",
            "status": "pending"
          },
          {
            "id": "31.4",
            "title": "JSON 직렬화 코드 생성",
            "description": "모든 API 모델에 대한 JSON 직렬화 코드 생성 완료",
            "status": "pending"
          }
        ]
      },
      {
        "id": 32,
        "title": "프로덕션 배포 - 기본 기능 구현 및 테스트",
        "description": "빌드가 성공한 후 핵심 기능들이 실제로 동작하는지 구현하고 테스트합니다.",
        "details": "사용자 인증, 기본 리포트 CRUD, 알림 시스템 등 핵심 기능들의 기본 동작을 구현하고 테스트합니다.",
        "testStrategy": "각 기능별 단위 테스트 작성 및 실행. 통합 테스트로 전체 플로우 검증. 실제 디바이스에서 앱 실행 테스트.",
        "priority": "high",
        "dependencies": [31],
        "status": "pending",
        "subtasks": [
          {
            "id": "32.1",
            "title": "인증 시스템 기본 구현",
            "description": "로그인/회원가입 기본 플로우 구현 및 테스트",
            "status": "pending"
          },
          {
            "id": "32.2",
            "title": "리포트 CRUD 기본 구현",
            "description": "리포트 생성/조회/수정/삭제 기본 기능 구현 및 테스트",
            "status": "pending"
          },
          {
            "id": "32.3",
            "title": "알림 시스템 기본 구현",
            "description": "로컬 알림 및 기본 푸시 알림 구현 및 테스트",
            "status": "pending"
          },
          {
            "id": "32.4",
            "title": "네비게이션 및 라우팅 구현",
            "description": "앱 내 네비게이션 및 라우팅 시스템 구현 및 테스트",
            "status": "pending"
          }
        ]
      },
      {
        "id": 33,
        "title": "프로덕션 배포 - 성능 최적화 및 에러 처리",
        "description": "프로덕션 환경을 위한 성능 최적화 및 포괄적인 에러 처리를 구현합니다.",
        "details": "메모리 최적화, 네트워크 에러 처리, 오프라인 모드, 로깅 시스템 등 프로덕션 환경에 필요한 안정성 요소들을 구현합니다.",
        "testStrategy": "성능 프로파일링으로 메모리/CPU 사용량 확인. 다양한 에러 시나리오 테스트. 오프라인 모드 동작 검증.",
        "priority": "medium",
        "dependencies": [32],
        "status": "pending",
        "subtasks": [
          {
            "id": "33.1",
            "title": "메모리 및 성능 최적화",
            "description": "이미지 캐싱, lazy loading, 메모리 누수 방지 등 성능 최적화",
            "status": "pending"
          },
          {
            "id": "33.2",
            "title": "네트워크 에러 처리",
            "description": "네트워크 오류, 타임아웃, 재시도 로직 등 네트워크 에러 처리",
            "status": "pending"
          },
          {
            "id": "33.3",
            "title": "오프라인 모드 구현",
            "description": "오프라인 데이터 캐싱 및 동기화 로직 구현",
            "status": "pending"
          },
          {
            "id": "33.4",
            "title": "로깅 및 모니터링 시스템",
            "description": "에러 로깅, 성능 모니터링, 크래시 리포팅 시스템 구현",
            "status": "pending"
          }
        ]
      },
      {
        "id": 34,
        "title": "프로덕션 배포 - 보안 강화 및 배포 준비",
        "description": "프로덕션 배포를 위한 보안 강화 및 최종 배포 준비를 수행합니다.",
        "details": "코드 난독화, 보안 키 관리, 앱 서명, 스토어 배포 준비 등 실제 배포에 필요한 모든 요소들을 완료합니다.",
        "testStrategy": "보안 테스트 수행. 프로덕션 빌드 생성 및 검증. 배포 파이프라인 테스트.",
        "priority": "medium",
        "dependencies": [33],
        "status": "pending",
        "subtasks": [
          {
            "id": "34.1",
            "title": "코드 난독화 및 최적화",
            "description": "Release 빌드용 코드 난독화 및 최적화 설정",
            "status": "pending"
          },
          {
            "id": "34.2",
            "title": "보안 키 및 인증서 관리",
            "description": "API 키, 인증서, 키스토어 등 보안 요소 관리",
            "status": "pending"
          },
          {
            "id": "34.3",
            "title": "프로덕션 빌드 및 배포",
            "description": "최종 프로덕션 빌드 생성 및 스토어 배포 준비",
            "status": "pending"
          },
          {
            "id": "34.4",
            "title": "CI/CD 파이프라인 구축",
            "description": "자동화된 빌드, 테스트, 배포 파이프라인 구축",
            "status": "pending"
          }
        ]
      }
    ],
    "metadata": {
      "created": "2025-07-10T01:00:00.000Z",
      "updated": "2025-01-13T15:00:00.000Z",
      "description": "Tasks for master context - Updated with production deployment refactoring plan to resolve 688 compile errors and achieve stable production deployment.",
      "totalTasks": 34,
      "completedTasks": 2,
      "inProgressTasks": 0,
      "pendingTasks": 32,
      "completionRate": "5.9%"
    }
  },
  "register-login-req": {
    "tasks": [
      {
        "id": 1,
        "title": "Setup Project and Dependencies",
        "description": "Set up the basic project structure, include necessary dependencies for API calls, JSON processing, and database interaction.",
        "details": "Initialize a new project repository. Add dependencies for HTTP client (e.g., Spring WebClient, Apache HttpClient), JSON processing (e.g., Jackson, Gson), and database access (e.g., Spring Data JPA, Hibernate). Configure basic project settings.",
        "testStrategy": "Verify project builds successfully and dependencies are resolved.",
        "priority": "high",
        "dependencies": [],
        "status": "done",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-07-12T14:09:06.422Z",
      "updated": "2025-01-13T15:00:00.000Z",
      "description": "Tasks for register-login-req context - Minimal tasks kept for reference"
    }
  }
}