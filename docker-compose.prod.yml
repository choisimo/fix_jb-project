version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: jbreport-postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/jbreport_prod
      DATABASE_USERNAME: ${DATABASE_USERNAME:-jbreport}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      ROBOFLOW_API_KEY: ${ROBOFLOW_API_KEY}
      ROBOFLOW_WORKSPACE_URL: ${ROBOFLOW_WORKSPACE_URL}
      GOOGLE_CLOUD_PROJECT_ID: ${GOOGLE_CLOUD_PROJECT_ID}
      GOOGLE_CLOUD_VISION_ENABLED: ${GOOGLE_CLOUD_VISION_ENABLED:-true}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      AI_AGENT_ENABLED: ${AI_AGENT_ENABLED:-true}
      AI_AGENT_API_URL: ${AI_AGENT_API_URL}
      AI_AGENT_API_KEY: ${AI_AGENT_API_KEY}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_MODEL: ${OPENROUTER_MODEL:-qwen/qwen2.5-vl-72b-instruct:free}
      FILE_STORAGE_PATH: /app/uploads
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      FILE_BASE_URL: ${API_BASE_URL}/files
    volumes:
      - uploads-data:/app/uploads
      - logs-data:/app/logs
      - ./backups/uploads:/app/uploads-backup:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-analysis:
    build:
      context: ./ai-analysis-server
      dockerfile: Dockerfile
    container_name: jbreport-ai-analysis
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/jbreport_prod
      DATABASE_USERNAME: ${DATABASE_USERNAME:-jbreport}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      ROBOFLOW_API_KEY: ${ROBOFLOW_API_KEY}
      ROBOFLOW_WORKSPACE_URL: ${ROBOFLOW_WORKSPACE_URL}
      GOOGLE_CLOUD_PROJECT_ID: ${GOOGLE_CLOUD_PROJECT_ID}
      GOOGLE_CLOUD_VISION_ENABLED: ${GOOGLE_CLOUD_VISION_ENABLED:-true}
      GOOGLE_CLOUD_API_KEY: ${GOOGLE_CLOUD_API_KEY}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      AI_AGENT_ENABLED: ${AI_AGENT_ENABLED:-true}
      AI_AGENT_API_URL: ${AI_AGENT_API_URL}
      AI_AGENT_API_KEY: ${AI_AGENT_API_KEY}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_MODEL: ${OPENROUTER_MODEL:-qwen/qwen2.5-vl-72b-instruct:free}
      FILE_STORAGE_PATH: /app/uploads
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  zookeeper-data:
    driver: local
  zookeeper-logs:
    driver: local
  kafka-data:
    driver: local
  uploads-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOST_UPLOAD_PATH:-./data/uploads}
  logs-data:
    driver: local
  nginx-cache:
    driver: local

networks:
  default:
    name: jbreport-network
    driver: bridge
